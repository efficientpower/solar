<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
        PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="User">
	<resultMap id="UserMap" class="org.wjh.solar.domain.User">
		<result column="id" property="id" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="nick_name" property="nickName" jdbcType="VARCHAR" />
		<result column="pass_word" property="passWord" jdbcType="VARCHAR" />
		<result column="gender" property="gender" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id,user_id,nick_name,pass_word,gender,create_time,update_time
	</sql>
	<cacheModel type="LRU" id="cache">
		<flushInterval hours="2" />
		<flushOnExecute statement="User.insert" />
		<flushOnExecute statement="User.update" />
		<flushOnExecute statement="User.delete" />
	</cacheModel>

	<select id="getById" parameterClass="Integer" resultMap="UserMap">
		select
		<include refid="User.Base_Column_List" />
		from user where id=#id#
	</select>
	<insert id="insert" parameterClass="org.wjh.solar.domain.User">
		insert into
		user(user_id,nick_name,pass_word,gender,create_time,update_time)
		values(#userId#,#nickName#,#passWord#,#gender#,now(),now())
		<selectKey resultClass="java.lang.Integer" keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	<update id="update" parameterClass="org.wjh.solar.domain.User">
		update user
		<dynamic prepend="set">
			<isNotNull prepend="," property="nick_name">
				nick_name = #nickName#
			</isNotNull>
			<isNotNull prepend="," property="pass_word">
				pass_word = #passWord#
			</isNotNull>
			<isNotNull prepend="," property="gender">
				gender = #gender#
			</isNotNull>
			create_time = now()
		</dynamic>
		where id=#id#
	</update>
	<delete id="delete" parameterClass="Integer">
		delete from user where id=#id#
	</delete>
	<select id="list" parameterClass="java.util.Map" resultMap="UserMap">
		select
		<include refid="User.Base_Column_List" />
		from user
		<isNotNull property="orderBy">
			order by $orderBy
		</isNotNull>
		limit #offset#, #limit#
	</select>
	<select id="getByUserId" parameterClass="string" resultMap="UserMap">
		select * from user where user_id=#userId#
	</select>
	<delete id="deleteByUserId" parameterClass="string">
        delete from user where user_id=#userId#
    </delete>
</sqlMap>